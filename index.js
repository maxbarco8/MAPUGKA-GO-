require('dotenv').config();
const { Telegraf } = require('telegraf');
const express = require('express');
const MapugkaCharacter = require('./character');

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);
const app = express();

// –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (—Ç–∏–º—á–∞—Å–æ–≤–µ, –≤ –ø–∞–º'—è—Ç—ñ)
const userCharacters = new Map();

// –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function getUserCharacter(userId) {
  if (!userCharacters.has(userId)) {
    userCharacters.set(userId, new MapugkaCharacter());
  }
  return userCharacters.get(userId);
}

// –ë–∞–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  const character = getUserCharacter(ctx.from.id);
  ctx.reply('–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ MAPUGKA Meme Factory & Charm Collection!');
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
bot.command('mymapugka', (ctx) => {
  const character = getUserCharacter(ctx.from.id);
  const state = character.getState();
  
  let accessories = state.accessories.length > 0 
    ? `–ê–∫—Å–µ—Å—É–∞—Ä–∏: ${state.accessories.join(', ')}`
    : '–©–µ –Ω–µ–º–∞—î –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤';
    
  ctx.replyWithHTML(`
üéÄ –í–∞—à MAPUGKA üéÄ
–†—ñ–≤–µ–Ω—å —à–∞—Ä–º—É: ${state.charmLevel}
–°—Ç–µ–π–∫–∞–Ω–æ —Ç–æ–∫–µ–Ω—ñ–≤: ${state.stakedTokens} $MAPUGKA
${accessories}
  `);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É —Ç–æ–∫–µ–Ω—ñ–≤
bot.command('stake', (ctx) => {
  const amount = parseInt(ctx.message.text.split(' ')[1]) || 0;
  
  if (amount <= 0) {
    return ctx.reply('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –¥–æ–¥–∞—Ç–Ω—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤ –¥–ª—è —Å—Ç–µ–π–∫—ñ–Ω–≥—É');
  }
  
  const character = getUserCharacter(ctx.from.id);
  const newBalance = character.stakeTokens(amount);
  
  ctx.reply(`‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞—Å—Ç–µ–π–∫–∞–ª–∏ ${amount} $MAPUGKA!\n–ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–µ–π–∫: ${newBalance} $MAPUGKA`);
});

// –†–æ—É—Ç –¥–ª—è –∫–æ—Ä–µ–Ω–µ–≤–æ–≥–æ —à–ª—è—Ö—É
app.get('/', (req, res) => {
  res.send('MAPUGKA Meme Factory & Charm Collection is running!');
});

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–µ–±—Ö—É–∫–∞
app.use(express.json());
app.post(`/webhook`, (req, res) => {
  bot.handleUpdate(req.body, res);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—ñ ${PORT}`);
  try {
    bot.launch();
    console.log('Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ');
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –±–æ—Ç–∞:', error.message);
  }
});

// –û–±—Ä–æ–±–∫–∞ –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –≤—ñ–¥–º–æ–≤–∞:', reason);
});
